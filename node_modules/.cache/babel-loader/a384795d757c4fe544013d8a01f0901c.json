{"ast":null,"code":"var _jsxFileName = \"/Users/carolephilibien/decode/Technicals_Tests/Chronometiq/my-clinic/src/MainMenu.jsx\";\nimport React, { Component } from 'react';\nimport { Menu, Input, Label } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'; // import fetch from './apiMocked.js';\n\nclass U_MainMenu extends Component {\n  constructor() {\n    super();\n\n    this.handleItemClick = (e, {\n      name\n    }) => {\n      this.setState({\n        activeItem: name\n      }); //for navigation\n\n      this.props.history.push('/' + name);\n    };\n\n    this.handleQuery = evt => {\n      if (this.props.query !== '') this.props.dispatch({\n        type: 'query',\n        search: evt.target.value\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      //try to force the rerender afet the props is changed\n      console.log('in componentDidUpdate of MainMenu'); // this.forceUpdate();\n\n      if (this.props.staff.length !== prevProps.staff.length) {\n        this.setState({\n          countEmployees: this.props.staff.length\n        });\n      }\n    };\n\n    this.render = () => {\n      console.log('render MainMenu');\n      let activeItem = this.state; //in order to activ staffMenu when the oage is restarted in /staff link\n\n      if (this.props.location.pathname.replace('/', '') === 'staff') activeItem = 'staff';\n      return React.createElement(Menu, {\n        pointing: true,\n        vertical: true,\n        className: \"mainMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        name: \"schedule\",\n        active: activeItem === 'schedule',\n        className: \"firstMenu\",\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Schedule\"), React.createElement(Menu.Item, {\n        name: \"staff\",\n        active: activeItem === 'staff',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.staff.length), \"Staff\"), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Input, {\n        icon: \"search\",\n        onChange: this.handleQuery,\n        value: this.props.query,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      //menu by default\n      activeItem: 'schedule',\n      countEmployees: 0\n    };\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    staff: state.employees,\n    query: state.searchQuery\n  };\n};\n\nlet MainMenu = connect(mapStateToProps)(withRouter(U_MainMenu));\nexport default MainMenu;","map":{"version":3,"sources":["/Users/carolephilibien/decode/Technicals_Tests/Chronometiq/my-clinic/src/MainMenu.jsx"],"names":["React","Component","Menu","Input","Label","withRouter","connect","U_MainMenu","constructor","handleItemClick","e","name","setState","activeItem","props","history","push","handleQuery","evt","query","dispatch","type","search","target","value","componentDidUpdate","prevProps","console","log","staff","length","countEmployees","render","state","location","pathname","replace","mapStateToProps","employees","searchQuery","MainMenu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Input, Label } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import fetch from './apiMocked.js';\n\nclass U_MainMenu extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //menu by default\n      activeItem: 'schedule',\n      countEmployees: 0\n    };\n  }\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n    //for navigation\n    this.props.history.push('/' + name);\n  };\n  handleQuery = evt => {\n    if (this.props.query !== '')\n      this.props.dispatch({\n        type: 'query',\n        search: evt.target.value\n      });\n  };\n  componentDidUpdate = prevProps => {\n    //try to force the rerender afet the props is changed\n    console.log('in componentDidUpdate of MainMenu');\n    // this.forceUpdate();\n    if (this.props.staff.length !== prevProps.staff.length) {\n      this.setState({ countEmployees: this.props.staff.length });\n    }\n  };\n  render = () => {\n    console.log('render MainMenu');\n    let activeItem = this.state;\n    //in order to activ staffMenu when the oage is restarted in /staff link\n    if (this.props.location.pathname.replace('/', '') === 'staff') activeItem = 'staff';\n    return (\n      <Menu pointing vertical className=\"mainMenu\">\n        <Menu.Item name=\"schedule\" active={activeItem === 'schedule'} className=\"firstMenu\" onClick={this.handleItemClick}>\n          Schedule\n        </Menu.Item>\n        <Menu.Item name=\"staff\" active={activeItem === 'staff'} onClick={this.handleItemClick}>\n          <Label>{this.props.staff.length}</Label>\n          Staff\n        </Menu.Item>\n        <Menu.Item>\n          <Input icon=\"search\" onChange={this.handleQuery} value={this.props.query} />\n        </Menu.Item>\n      </Menu>\n    );\n  };\n}\nlet mapStateToProps = state => {\n  return {\n    staff: state.employees,\n    query: state.searchQuery\n  };\n};\nlet MainMenu = connect(mapStateToProps)(withRouter(U_MainMenu));\nexport default MainMenu;\n"]},"metadata":{},"sourceType":"module"}