{"ast":null,"code":"var _jsxFileName = \"/Users/carolephilibien/decode/Technicals_Tests/Chronometiq/my-clinic/src/MainMenu.jsx\";\nimport React, { Component } from 'react';\nimport { Menu, Input, Label } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport fetch from './apiMocked.js';\n\nclass U_MainMenu extends Component {\n  constructor() {\n    super();\n\n    this.handleItemClick = (e, {\n      name\n    }) => {\n      this.setState({\n        activeItem: name\n      }); //for navigation\n\n      this.props.history.push('/' + name);\n    };\n\n    this.render = () => {\n      const activeItem = this.state.activeItem;\n      return React.createElement(Menu, {\n        pointing: true,\n        vertical: true,\n        className: \"mainMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        name: \"schedule\",\n        active: activeItem === 'schedule',\n        className: \"firstMenu\",\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Schedule\"), React.createElement(Menu.Item, {\n        name: \"staff\",\n        active: activeItem === 'staff',\n        onClick: this.handleItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.staff.length), \"Staff\"), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Input, {\n        icon: \"search\",\n        placeholder: \"Search staff...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      //menu by default\n      activeItem: 'schedule',\n      countEmployees: 0\n    };\n  }\n\n  componentDidMount() {\n    let apiUrl = 'https://chrono.com/api/doctors)';\n    return fetch(`${apiUrl}/tasks`).then(staffResponse => staffResponse.json()).then(staffData => {\n      this.props.dispatch({\n        type: 'get-employees',\n        employees: staffData\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    staff: state.employees\n  };\n};\n\nlet MainMenu = connect(mapStateToProps)(withRouter(U_MainMenu));\nexport default MainMenu;","map":{"version":3,"sources":["/Users/carolephilibien/decode/Technicals_Tests/Chronometiq/my-clinic/src/MainMenu.jsx"],"names":["React","Component","Menu","Input","Label","withRouter","connect","fetch","U_MainMenu","constructor","handleItemClick","e","name","setState","activeItem","props","history","push","render","state","staff","length","countEmployees","componentDidMount","apiUrl","then","staffResponse","json","staffData","dispatch","type","employees","catch","error","console","log","mapStateToProps","MainMenu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AACjCQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,eARc,GAQI,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAiB;AACjC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF;AAAd,OAAd,EADiC,CAEjC;;AACA,WAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAML,IAA9B;AACD,KAZa;;AAAA,SA2BdM,MA3Bc,GA2BL,MAAM;AAAA,YACLJ,UADK,GACU,KAAKK,KADf,CACLL,UADK;AAEb,aACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,MAAM,EAAEA,UAAU,KAAK,UAAlD;AAA8D,QAAA,SAAS,EAAC,WAAxE;AAAoF,QAAA,OAAO,EAAE,KAAKJ,eAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAKE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,MAAM,EAAEI,UAAU,KAAK,OAA/C;AAAwD,QAAA,OAAO,EAAE,KAAKJ,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKK,KAAL,CAAWK,KAAX,CAAiBC,MAAzB,CADF,UALF,EASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CADF;AAeD,KA5Ca;;AAEZ,SAAKF,KAAL,GAAa;AACX;AACAL,MAAAA,UAAU,EAAE,UAFD;AAGXQ,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;;AAMDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAG,iCAAb;AACA,WAAOjB,KAAK,CAAE,GAAEiB,MAAO,QAAX,CAAL,CACJC,IADI,CACCC,aAAa,IAAIA,aAAa,CAACC,IAAd,EADlB,EAEJF,IAFI,CAECG,SAAS,IAAI;AACjB,WAAKb,KAAL,CAAWc,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,eADY;AAElBC,QAAAA,SAAS,EAAEH;AAFO,OAApB;AAID,KAPI,EAQJI,KARI,CAQEC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVI,CAAP;AAWD;;AA3BgC;;AA+CnC,IAAIG,eAAe,GAAGjB,KAAK,IAAI;AAC7B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACY;AADR,GAAP;AAGD,CAJD;;AAKA,IAAIM,QAAQ,GAAG/B,OAAO,CAAC8B,eAAD,CAAP,CAAyB/B,UAAU,CAACG,UAAD,CAAnC,CAAf;AACA,eAAe6B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Input, Label } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport fetch from './apiMocked.js';\n\nclass U_MainMenu extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //menu by default\n      activeItem: 'schedule',\n      countEmployees: 0\n    };\n  }\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n    //for navigation\n    this.props.history.push('/' + name);\n  };\n  componentDidMount() {\n    let apiUrl = 'https://chrono.com/api/doctors)';\n    return fetch(`${apiUrl}/tasks`)\n      .then(staffResponse => staffResponse.json())\n      .then(staffData => {\n        this.props.dispatch({\n          type: 'get-employees',\n          employees: staffData\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  render = () => {\n    const { activeItem } = this.state;\n    return (\n      <Menu pointing vertical className=\"mainMenu\">\n        <Menu.Item name=\"schedule\" active={activeItem === 'schedule'} className=\"firstMenu\" onClick={this.handleItemClick}>\n          Schedule\n        </Menu.Item>\n\n        <Menu.Item name=\"staff\" active={activeItem === 'staff'} onClick={this.handleItemClick}>\n          <Label>{this.props.staff.length}</Label>\n          Staff\n        </Menu.Item>\n        <Menu.Item>\n          <Input icon=\"search\" placeholder=\"Search staff...\" />\n        </Menu.Item>\n      </Menu>\n    );\n  };\n}\nlet mapStateToProps = state => {\n  return {\n    staff: state.employees\n  };\n};\nlet MainMenu = connect(mapStateToProps)(withRouter(U_MainMenu));\nexport default MainMenu;\n"]},"metadata":{},"sourceType":"module"}